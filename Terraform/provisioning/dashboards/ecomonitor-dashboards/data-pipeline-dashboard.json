{
  "dashboard": {
    "id": null,
    "title": "EcoMonitor Data Pipeline Dashboard",
    "description": "Monitor data flow from S3 to DynamoDB for IoT sensor data",
    "tags": ["ecomonitor", "iot", "data-pipeline"],
    "timezone": "browser",
    "panels": [
      {
        "id": 1,
        "title": "Data Pipeline Overview",
        "type": "text",
        "gridPos": {"h": 3, "w": 24, "x": 0, "y": 0},
        "content": "# EcoMonitor Data Pipeline\n\nThis dashboard monitors the complete data flow: **IoT Sensors** â†’ **S3** â†’ **Lambda** â†’ **DynamoDB**\n\n## Key Components:\n- **IoT Simulators**: Generate temperature, humidity, AQI, and CO2 data\n- **S3 Bucket**: Stores raw sensor data files\n- **Lambda Function**: Processes S3 files and stores in DynamoDB\n- **DynamoDB**: Final destination for processed sensor data\n\nðŸŸ¢ **Green** = Healthy operations | ðŸŸ¡ **Yellow** = Warnings | ðŸ”´ **Red** = Errors"
      },
      {
        "id": 2,
        "title": "S3 to DynamoDB Processing Rate",
        "type": "graph",
        "gridPos": {"h": 8, "w": 12, "x": 0, "y": 3},
        "targets": [
          {
            "expr": "sum(rate(aws_lambda_invocations_total{function_name=\"s3_to_dynamo_processor\"}[5m]))",
            "legendFormat": "Processing Rate (per minute)"
          }
        ],
        "yAxes": [
          {
            "label": "Invocations/min",
            "min": 0
          }
        ]
      },
      {
        "id": 3,
        "title": "Success vs Error Rate",
        "type": "graph",
        "gridPos": {"h": 8, "w": 12, "x": 12, "y": 3},
        "targets": [
          {
            "expr": "sum(rate(aws_lambda_invocations_total{function_name=\"s3_to_dynamo_processor\"}[5m])) - sum(rate(aws_lambda_errors_total{function_name=\"s3_to_dynamo_processor\"}[5m]))",
            "legendFormat": "Successful Processes"
          },
          {
            "expr": "sum(rate(aws_lambda_errors_total{function_name=\"s3_to_dynamo_processor\"}[5m]))",
            "legendFormat": "Errors"
          }
        ]
      },
      {
        "id": 4,
        "title": "Data Volume Metrics",
        "type": "row",
        "gridPos": {"h": 1, "w": 24, "x": 0, "y": 11}
      },
      {
        "id": 5,
        "title": "S3 Bucket Size",
        "type": "stat",
        "gridPos": {"h": 4, "w": 6, "x": 0, "y": 12},
        "targets": [
          {
            "expr": "aws_s3_bucket_size_bytes{bucket=\"ecomonitor-raw-b01006432\"}",
            "legendFormat": "Bucket Size"
          }
        ],
        "unit": "bytes"
      },
      {
        "id": 6,
        "title": "S3 Object Count",
        "type": "stat",
        "gridPos": {"h": 4, "w": 6, "x": 6, "y": 12},
        "targets": [
          {
            "expr": "aws_s3_number_of_objects{bucket=\"ecomonitor-raw-b01006432\"}",
            "legendFormat": "Object Count"
          }
        ]
      },
      {
        "id": 7,
        "title": "DynamoDB Item Count",
        "type": "stat",
        "gridPos": {"h": 4, "w": 6, "x": 12, "y": 12},
        "targets": [
          {
            "expr": "aws_dynamodb_item_count{table=\"ecomonitor_processed_data\"}",
            "legendFormat": "Items"
          }
        ]
      },
      {
        "id": 8,
        "title": "Processing Time",
        "type": "stat",
        "gridPos": {"h": 4, "w": 6, "x": 18, "y": 12},
        "targets": [
          {
            "expr": "avg(aws_lambda_duration_average{function_name=\"s3_to_dynamo_processor\"})",
            "legendFormat": "Avg Duration"
          }
        ],
        "unit": "ms"
      },
      {
        "id": 9,
        "title": "Sensor Data by Type",
        "type": "piechart",
        "gridPos": {"h": 8, "w": 12, "x": 0, "y": 16},
        "targets": [
          {
            "expr": "sum by (sensor_type) (ecomonitor_datapipeline_temperature_sensor_data_processed_total)",
            "legendFormat": "Temperature"
          },
          {
            "expr": "sum by (sensor_type) (ecomonitor_datapipeline_humidity_sensor_data_processed_total)",
            "legendFormat": "Humidity"
          },
          {
            "expr": "sum by (sensor_type) (ecomonitor_datapipeline_aqi_sensor_data_processed_total)",
            "legendFormat": "AQI"
          },
          {
            "expr": "sum by (sensor_type) (ecomonitor_datapipeline_co2_sensor_data_processed_total)",
            "legendFormat": "CO2"
          }
        ]
      },
      {
        "id": 10,
        "title": "Error Analysis",
        "type": "graph",
        "gridPos": {"h": 8, "w": 12, "x": 12, "y": 16},
        "targets": [
          {
            "expr": "sum(rate(ecomonitor_datapipeline_s3_file_not_found_errors_total[5m]))",
            "legendFormat": "S3 Not Found"
          },
          {
            "expr": "sum(rate(ecomonitor_datapipeline_dynamo_db_validation_errors_total[5m]))",
            "legendFormat": "DynamoDB Validation"
          },
          {
            "expr": "sum(rate(ecomonitor_datapipeline_data_processing_errors_total[5m]))",
            "legendFormat": "Processing Errors"
          }
        ]
      },
      {
        "id": 11,
        "title": "Recent Activity Log",
        "type": "logs",
        "gridPos": {"h": 8, "w": 24, "x": 0, "y": 24},
        "targets": [
          {
            "expr": "{job=\"aws-lambda\", function_name=\"s3_to_dynamo_processor\"} |= \"Successfully processed\" or \"Error processing\"",
            "legendFormat": ""
          }
        ]
      }
    ],
    "time": {
      "from": "now-1h",
      "to": "now"
    },
    "refresh": "30s"
  }
}
